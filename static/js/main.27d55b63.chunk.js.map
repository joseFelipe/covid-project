{"version":3,"sources":["images/logo-herocode-covid-white.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Profile/Profile.jsx","App.js","index.js","components/Profile/Profile.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","images/Felipe.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","cardTitle","gutterBottom","icon","variant","start","end","value","duration","separator","Divider","hr","Date","toLocaleString","color","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","InputLabel","inputLabel","shrink","NativeSelect","selectFont","defaultValue","onChange","e","target","i","id","Profile","style","borderRadius","width","border","src","imageFelipe","alt","CardActions","cardActions","IconButton","aria-label","href","App","state","fetchedData","setState","this","image","logoCovid","containerLight","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27d55b63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-herocode-covid-white.216c9b10.png\";","import React from 'react';\n\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport SentimentVeryDissatisfiedSharpIcon from '@material-ui/icons/SentimentVeryDissatisfiedSharp';import SentimentVerySatisfiedSharpIcon from '@material-ui/icons/SentimentVerySatisfiedSharp';\nimport PeopleAltSharpIcon from '@material-ui/icons/PeopleAltSharp';import CountUp from \"react-countup\";\nimport styles from './Cards.module.css';\nimport cx from 'classnames';\nimport Divider from '@material-ui/core/Divider';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate} }) => {\n  if (!confirmed) {\n    return 'Carregando...'\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify='center'>\n        <Grid item component={Card} xs={12} md className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography \n              className={styles.cardTitle} \n              gutterBottom>\n                Infectados\n                <PeopleAltSharpIcon className={styles.icon}/>\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Divider className={styles.hr} />\n            <Typography className={styles.lastUpdate}>Última atualização: <b>{new Date(lastUpdate).toLocaleString('pt-br')}</b></Typography>\n            <Divider className={styles.hr} />\n            <Typography variant='body2'>Número de casos ativos de COVID-19 </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography \n              className={styles.cardTitle} \n              color='textSecondary' \n              gutterBottom>\n                Curados \n              <SentimentVerySatisfiedSharpIcon className={styles.icon}/>\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Divider className={styles.hr} />\n            <Typography className={styles.lastUpdate}>Última atualização: <b>{new Date(lastUpdate).toLocaleString('pt-br')}</b></Typography>\n            <Divider className={styles.hr} />\n            <Typography variant='body2'>Número de curados do COVID-19</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography \n              className={styles.cardTitle} \n              color='textSecondary' \n              gutterBottom>\n                Mortes \n              <SentimentVeryDissatisfiedSharpIcon className={styles.icon} />\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Divider className={styles.hr} />\n            <Typography className={styles.lastUpdate}>Última atualização: <b>{new Date(lastUpdate).toLocaleString('pt-br')}</b></Typography>\n            <Divider className={styles.hr} />\n            <Typography variant='body2'>Número de mortes causadas pelo COVID-19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Cards;","import axios from \"axios\"\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`)\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries} } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);    \n  }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = (\n    dailyData.length !== 0\n      ? (\n        <Line\n          data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n              data: dailyData.map(({ confirmed }) => confirmed),\n              label: 'Infectados',\n              borderColor: '#3333ff',\n              fill: true\n            },\n            {\n              data: dailyData.map(({ deaths }) => deaths),\n              label: 'Mortes',\n              borderColor: 'red',\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\n              fill: true\n            }],\n          }}\n        />) : null\n  );\n\n  const barChart = (\n    confirmed\n      ? (\n        <Bar\n          data={{\n            labels: ['Infectados', 'Curados', 'Mortos'],\n            datasets: [{\n              label: 'Pessoas',\n              backgroundColor: [\n                'rgba(0, 255, 0, 0.5)',\n                'rgba(0, 0, 255, 0.5)',\n                'rgba(255, 0, 0, 0.5)',\n              ],\n              data: [confirmed.value, recovered.value, deaths.value],\n            }]\n          }}\n          options={{\n            legend: { display: false },\n            title: { display: true, text: `Cenário atual no(a) ${country}`}\n          }}\n        />\n      ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  )\n}\n\nexport default Chart;","import React, { useState, useEffect} from 'react';\nimport { NativeSelect, FormControl, InputLabel } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    }\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <div>\n      <FormControl className={styles.formControl}>\n        <InputLabel className={styles.inputLabel} shrink>\n          País\n        </InputLabel>\n        <NativeSelect className={styles.selectFont} defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n          <option value=''>Todos</option>\n          {fetchedCountries.map((country, i) => <option id={i} value={country}>{country}</option>)}\n        </NativeSelect>\n      </FormControl>\n\n    </div>\n  )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport styles from './Profile.module.css';\nimport imageFelipe from '../../images/Felipe.jpg';\n\nimport Divider from '@material-ui/core/Divider'\nimport CardActions from '@material-ui/core/CardActions';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport IconButton from '@material-ui/core/IconButton';\nimport cx from 'classnames';\n\nconst Profile = () => {\n\n  return (\n    <>\n      <Grid className={styles.container} container spacing={3} justify='center'>\n        <Grid item component={Card} xs={12} md className={cx(styles.card)}>\n          <CardContent>\n            <img \n              style={{ borderRadius: \"50%\", width: 150, border: '1px solid rgba(2, 218, 56, 0.8)' }}\n              src={imageFelipe} \n              alt='Foto perfil Felipe'\n            />\n            <Typography \n              variant='h5'\n              className={styles.cardTitle} \n              gutterBottom>\n                Felipe Silva\n            </Typography>\n            <Typography variant=\"body2\" color=\"\" component=\"p\">\n              Programador apaixonado por tecnologia e por café <span>☕️</span>\n            </Typography>\n          </CardContent>\n          <Divider className={styles.hr} />\n          <CardActions className={styles.cardActions}>\n            <IconButton aria-label=\"Felipe facebook profile\">\n              <a href='https://www.facebook.com/felipe.silva.315865'>\n              <FacebookIcon />\n              </a>\n            </IconButton>\n            <IconButton aria-label=\"Felipe instagram profile\">\n              <a href='https://www.instagram.com/felipeearth/'>\n                <InstagramIcon />\n              </a>\n            </IconButton>\n            <IconButton aria-label=\"Felipe github repository\">\n              <a href='https://github.com/joseFelipe'>\n                <GitHubIcon />\n              </a>\n            </IconButton>\n            <IconButton aria-label=\"Felipe linkedin profile\">\n              <a href='https://www.linkedin.com/in/felipe-silva-b613aa57/'>\n                <LinkedInIcon />\n              </a>\n            </IconButton>\n          </CardActions>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Profile;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker, Profile } from './components';\nimport Divider from '@material-ui/core/Divider';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport logoCovid from './images/logo-herocode-covid-white.png';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  \n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({ data: fetchedData, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n    \n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={logoCovid} alt='COVID-19' />\n        <Divider className={styles.hr} />\n        <Cards data={data}/>\n        <div className={styles.containerLight}>\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n          <Chart data={data} country={country}/>\n        </div>\n        <div className={styles.container}>\n          <Profile />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1Z5Lm\",\"card\":\"Profile_card__3-Oh8\",\"cardActions\":\"Profile_cardActions__2oIkQ\",\"hr\":\"Profile_hr__kttbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"containerLight\":\"App_containerLight__12vEp\",\"image\":\"App_image__3byI1\",\"hr\":\"App_hr__cwsia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"selectFont\":\"CountryPicker_selectFont__2GeFi\",\"inputLabel\":\"CountryPicker_inputLabel__3qX-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"lastUpdate\":\"Cards_lastUpdate__32tr2\",\"cardTitle\":\"Cards_cardTitle__29IaC\",\"icon\":\"Cards_icon__6bOsc\",\"hr\":\"Cards_hr__3rIAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/Felipe.10ca4ae3.jpg\";"],"sourceRoot":""}